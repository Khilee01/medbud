{"ast":null,"code":"var _jsxFileName = \"S:\\\\New folder\\\\medbuddy\\\\src\\\\components\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    const ws = new WebSocket(\"ws://localhost:8080\");\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setNotifications(prev => [...prev, `Time to take ${data.medicine} at ${data.time}`]);\n    };\n    return () => ws.close();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications\",\n    children: notifications.map((note, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: note\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Notifications, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Notifications","_s","notifications","setNotifications","ws","WebSocket","onmessage","event","data","JSON","parse","prev","medicine","time","close","className","children","map","note","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["S:/New folder/medbuddy/src/components/Notifications.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst Notifications = () => {\n    const [notifications, setNotifications] = useState([]);\n\n    useEffect(() => {\n        const ws = new WebSocket(\"ws://localhost:8080\");\n\n        ws.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            setNotifications((prev) => [...prev, `Time to take ${data.medicine} at ${data.time}`]);\n        };\n\n        return () => ws.close();\n    }, []);\n\n    return (\n        <div className=\"notifications\">\n            {notifications.map((note, index) => (\n                <p key={index}>{note}</p>\n            ))}\n        </div>\n    );\n};\n\nexport default Notifications;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZ,MAAMQ,EAAE,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAE/CD,EAAE,CAACE,SAAS,GAAIC,KAAK,IAAK;MACtB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnCL,gBAAgB,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,gBAAgBH,IAAI,CAACI,QAAQ,OAAOJ,IAAI,CAACK,IAAI,EAAE,CAAC,CAAC;IAC1F,CAAC;IAED,OAAO,MAAMT,EAAE,CAACU,KAAK,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIf,OAAA;IAAKgB,SAAS,EAAC,eAAe;IAAAC,QAAA,EACzBd,aAAa,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3BpB,OAAA;MAAAiB,QAAA,EAAgBE;IAAI,GAAZC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAC3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACtB,EAAA,CArBID,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAuBnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}