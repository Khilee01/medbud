{"ast":null,"code":"var _jsxFileName = \"S:\\\\New folder\\\\medbuddy\\\\src\\\\components\\\\CameraScanner.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CameraScanner = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [medicineInfo, setMedicineInfo] = useState(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [cameraActive, setCameraActive] = useState(false);\n  const [backendStatus, setBackendStatus] = useState(null);\n  const [userName, setUserName] = useState('');\n  const [doseTrackingResult, setDoseTrackingResult] = useState(null);\n  const [doseHistory, setDoseHistory] = useState(null);\n\n  // Check backend status when component mounts\n  useEffect(() => {\n    checkBackendStatus();\n    return () => {\n      // Cleanup: stop tracks when component unmounts\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // Function to check if backend is running\n  const checkBackendStatus = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/health\", {\n        method: \"GET\"\n      });\n      if (response.ok) {\n        setBackendStatus(\"connected\");\n        setError(null);\n      } else {\n        setBackendStatus(\"error\");\n        setError(\"Backend service is not responding correctly\");\n      }\n    } catch (error) {\n      console.error(\"Backend connection error:\", error);\n      setBackendStatus(\"error\");\n      setError(\"Cannot connect to backend service. Please make sure the Python server is running.\");\n    }\n  };\n\n  // Function to start the camera\n  const startCamera = async () => {\n    try {\n      // Check backend status first\n      if (backendStatus !== \"connected\") {\n        await checkBackendStatus();\n        if (backendStatus !== \"connected\") {\n          return; // Don't start camera if backend isn't available\n        }\n      }\n\n      // Stop any existing tracks\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: \"environment\"\n        } // Use back camera if available\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        setCameraActive(true);\n        setError(null);\n      }\n    } catch (error) {\n      console.error(\"Error accessing camera:\", error);\n      setError(\"Failed to access camera. Please check permissions.\");\n      setCameraActive(false);\n    }\n  };\n\n  // Function to stop the camera\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      const tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n      setCameraActive(false);\n    }\n  };\n\n  // Function to capture and process the image\n  const captureAndUploadImage = async () => {\n    setIsLoading(true);\n    setError(null);\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    if (canvas && video) {\n      try {\n        // Set canvas dimensions to match the video\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const context = canvas.getContext(\"2d\");\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        // Get the image data URL and set it to state\n        const imageDataUrl = canvas.toDataURL(\"image/jpeg\");\n        setCapturedImage(imageDataUrl);\n\n        // Extract the base64 data\n        const base64Data = imageDataUrl.split(',')[1];\n\n        // Send to the API using the base64 data directly\n        const response = await fetch(\"http://localhost:5000/upload\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            image_data: imageDataUrl\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setMedicineInfo(data);\n          speakMedicineInfo(data.medicine, data.description);\n        } else {\n          throw new Error(data.message || data.error || \"Failed to process the image\");\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error capturing/processing image:\", error);\n        setError(error.message || \"Failed to process the image\");\n        setIsLoading(false);\n        speakError();\n      }\n    }\n  };\n\n  // Function to convert medicine name and info to speech\n  const speakMedicineInfo = (name, description) => {\n    if (!window.speechSynthesis) return;\n    const speech = new SpeechSynthesisUtterance();\n    if (name) {\n      speech.text = `The medicine is ${name}. ${description ? \"Description: \" + description : \"No additional details available.\"}`;\n    } else {\n      speech.text = \"Unable to identify the medicine.\";\n    }\n    speech.lang = \"en-US\";\n    speech.rate = 1;\n    window.speechSynthesis.speak(speech);\n  };\n\n  // New method for tracking dosage\n  const trackDosage = async () => {\n    if (!userName || !medicineInfo) {\n      setError('Please enter your name and scan a medicine first');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/track-dosage', {\n        user_name: userName,\n        medicine_name: medicineInfo.medicine\n      });\n      setDoseTrackingResult(response.data);\n\n      // Optionally fetch dose history after tracking\n      await fetchDoseHistory();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error tracking dosage', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to track dosage');\n    }\n  };\n\n  // Method to fetch dose history\n  const fetchDoseHistory = async () => {\n    if (!userName || !medicineInfo) return;\n    try {\n      const response = await axios.post('http://localhost:5000/dose-history', {\n        user_name: userName,\n        medicine_name: medicineInfo.medicine,\n        days: 7 // Optional: specify number of days\n      });\n      setDoseHistory(response.data.history);\n    } catch (error) {\n      console.error('Error fetching dose history', error);\n    }\n  };\n\n  // Method to get medication details\n  const fetchMedicationDetails = async () => {\n    if (!userName || !medicineInfo) return;\n    try {\n      const response = await axios.post('http://localhost:5000/medication-details', {\n        user_name: userName,\n        medicine_name: medicineInfo.medicine\n      });\n\n      // Handle medication details as needed\n      console.log('Medication Details:', response.data.details);\n    } catch (error) {\n      console.error('Error fetching medication details', error);\n    }\n  };\n\n  // Function to speak error messages\n  const speakError = () => {\n    if (!window.speechSynthesis) return;\n    const speech = new SpeechSynthesisUtterance();\n    speech.text = \"There was an error processing the image. Please try again with a clearer image.\";\n    speech.lang = \"en-US\";\n    window.speechSynthesis.speak(speech);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-center\",\n      children: \"Medicine Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"userName\",\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"userName\",\n        value: userName,\n        onChange: e => setUserName(e.target.value),\n        className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\",\n        placeholder: \"Enter your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), backendStatus === \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold\",\n        children: \"Backend Connection Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkBackendStatus,\n        className: \"mt-2 bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded\",\n        children: \"Retry Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        playsInline: true,\n        className: `w-full max-w-md mx-auto border-2 rounded-lg ${cameraActive ? 'block' : 'hidden'}`,\n        style: {\n          height: \"300px\",\n          objectFit: \"cover\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), capturedImage && !cameraActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Captured Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: capturedImage,\n          alt: \"Captured\",\n          className: \"mx-auto border rounded-lg shadow-md\",\n          style: {\n            maxWidth: \"100%\",\n            maxHeight: \"300px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white\",\n          children: \"Processing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center gap-4 mb-4\",\n      children: !cameraActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCamera,\n        className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg\",\n        disabled: backendStatus === \"error\",\n        children: \"Start Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: captureAndUploadImage,\n          className: \"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg\",\n          disabled: isLoading,\n          children: \"Scan Medicine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopCamera,\n          className: \"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg\",\n          disabled: isLoading,\n          children: \"Stop Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this), error && backendStatus !== \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }, this), medicineInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 bg-white p-4 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-2\",\n        children: \"Dose Tracking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: trackDosage,\n        disabled: !userName,\n        className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg mb-4\",\n        children: \"Track Dosage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }, this), doseTrackingResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `\n                            p-3 rounded-lg mb-4\n                            ${doseTrackingResult.status === 'dosage_tracked' ? 'bg-green-100' : 'bg-yellow-100'}\n                        `,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: doseTrackingResult.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 29\n        }, this), doseTrackingResult.doses_taken && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Doses Taken: \", doseTrackingResult.doses_taken, \" / \", doseTrackingResult.total_doses]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 25\n      }, this), doseHistory && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Dose History (Last 7 Days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full border-collapse border border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"bg-gray-100\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border p-2\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border p-2\",\n                children: \"Doses Taken\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border p-2\",\n                children: \"Total Doses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: doseHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border p-2\",\n                children: entry.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border p-2\",\n                children: entry.doses_taken\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border p-2\",\n                children: entry.total_doses\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n};\n_s(CameraScanner, \"scP0YN2jZ4DCa2j0K3e8gnYCaJw=\");\n_c = CameraScanner;\nexport default CameraScanner;\nvar _c;\n$RefreshReg$(_c, \"CameraScanner\");","map":{"version":3,"names":["axios","React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraScanner","_s","videoRef","canvasRef","medicineInfo","setMedicineInfo","capturedImage","setCapturedImage","isLoading","setIsLoading","error","setError","cameraActive","setCameraActive","backendStatus","setBackendStatus","userName","setUserName","doseTrackingResult","setDoseTrackingResult","doseHistory","setDoseHistory","checkBackendStatus","current","srcObject","tracks","getTracks","forEach","track","stop","response","fetch","method","ok","console","startCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","stopCamera","captureAndUploadImage","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","imageDataUrl","toDataURL","base64Data","split","headers","body","JSON","stringify","image_data","data","json","speakMedicineInfo","medicine","description","Error","message","speakError","name","window","speechSynthesis","speech","SpeechSynthesisUtterance","text","lang","rate","speak","trackDosage","post","user_name","medicine_name","fetchDoseHistory","_error$response","_error$response$data","days","history","fetchMedicationDetails","log","details","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","placeholder","onClick","ref","autoPlay","playsInline","style","objectFit","src","alt","maxWidth","maxHeight","disabled","status","doses_taken","total_doses","map","entry","index","date","_c","$RefreshReg$"],"sources":["S:/New folder/medbuddy/src/components/CameraScanner.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useRef, useState } from \"react\";\nconst CameraScanner = () => {\n    const videoRef = useRef(null);\n    const canvasRef = useRef(null);\n    const [medicineInfo, setMedicineInfo] = useState(null);\n    const [capturedImage, setCapturedImage] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [cameraActive, setCameraActive] = useState(false);\n    const [backendStatus, setBackendStatus] = useState(null);\n    const [userName, setUserName] = useState('');\n    const [doseTrackingResult, setDoseTrackingResult] = useState(null);\n    const [doseHistory, setDoseHistory] = useState(null);\n\n    // Check backend status when component mounts\n    useEffect(() => {\n        checkBackendStatus();\n        \n        return () => {\n            // Cleanup: stop tracks when component unmounts\n            if (videoRef.current && videoRef.current.srcObject) {\n                const tracks = videoRef.current.srcObject.getTracks();\n                tracks.forEach(track => track.stop());\n            }\n        };\n    }, []);\n\n    // Function to check if backend is running\n    const checkBackendStatus = async () => {\n        try {\n            const response = await fetch(\"http://localhost:5000/health\", {\n                method: \"GET\",\n            });\n            \n            if (response.ok) {\n                setBackendStatus(\"connected\");\n                setError(null);\n            } else {\n                setBackendStatus(\"error\");\n                setError(\"Backend service is not responding correctly\");\n            }\n        } catch (error) {\n            console.error(\"Backend connection error:\", error);\n            setBackendStatus(\"error\");\n            setError(\"Cannot connect to backend service. Please make sure the Python server is running.\");\n        }\n    };\n\n    // Function to start the camera\n    const startCamera = async () => {\n        try {\n            // Check backend status first\n            if (backendStatus !== \"connected\") {\n                await checkBackendStatus();\n                if (backendStatus !== \"connected\") {\n                    return; // Don't start camera if backend isn't available\n                }\n            }\n            \n            // Stop any existing tracks\n            if (videoRef.current && videoRef.current.srcObject) {\n                const tracks = videoRef.current.srcObject.getTracks();\n                tracks.forEach(track => track.stop());\n            }\n\n            const stream = await navigator.mediaDevices.getUserMedia({ \n                video: { facingMode: \"environment\" } // Use back camera if available\n            });\n            \n            if (videoRef.current) {\n                videoRef.current.srcObject = stream;\n                setCameraActive(true);\n                setError(null);\n            }\n        } catch (error) {\n            console.error(\"Error accessing camera:\", error);\n            setError(\"Failed to access camera. Please check permissions.\");\n            setCameraActive(false);\n        }\n    };\n\n    // Function to stop the camera\n    const stopCamera = () => {\n        if (videoRef.current && videoRef.current.srcObject) {\n            const tracks = videoRef.current.srcObject.getTracks();\n            tracks.forEach(track => track.stop());\n            videoRef.current.srcObject = null;\n            setCameraActive(false);\n        }\n    };\n\n    // Function to capture and process the image\n    const captureAndUploadImage = async () => {\n        setIsLoading(true);\n        setError(null);\n        \n        const canvas = canvasRef.current;\n        const video = videoRef.current;\n\n        if (canvas && video) {\n            try {\n                // Set canvas dimensions to match the video\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                \n                const context = canvas.getContext(\"2d\");\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n                // Get the image data URL and set it to state\n                const imageDataUrl = canvas.toDataURL(\"image/jpeg\");\n                setCapturedImage(imageDataUrl);\n\n                // Extract the base64 data\n                const base64Data = imageDataUrl.split(',')[1];\n\n                // Send to the API using the base64 data directly\n                const response = await fetch(\"http://localhost:5000/upload\", {\n                    method: \"POST\",\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        image_data: imageDataUrl\n                    }),\n                });\n\n                const data = await response.json();\n                \n                if (response.ok) {\n                    setMedicineInfo(data);\n                    speakMedicineInfo(data.medicine, data.description);\n                } else {\n                    throw new Error(data.message || data.error || \"Failed to process the image\");\n                }\n                \n                setIsLoading(false);\n            } catch (error) {\n                console.error(\"Error capturing/processing image:\", error);\n                setError(error.message || \"Failed to process the image\");\n                setIsLoading(false);\n                speakError();\n            }\n        }\n    };\n\n    // Function to convert medicine name and info to speech\n    const speakMedicineInfo = (name, description) => {\n        if (!window.speechSynthesis) return;\n        \n        const speech = new SpeechSynthesisUtterance();\n        if (name) {\n            speech.text = `The medicine is ${name}. ${description ? \"Description: \" + description : \"No additional details available.\"}`;\n        } else {\n            speech.text = \"Unable to identify the medicine.\";\n        }\n        speech.lang = \"en-US\";\n        speech.rate = 1;\n        window.speechSynthesis.speak(speech);\n    };\n\n      // New method for tracking dosage\n      const trackDosage = async () => {\n        if (!userName || !medicineInfo) {\n            setError('Please enter your name and scan a medicine first');\n            return;\n        }\n\n        try {\n            const response = await axios.post('http://localhost:5000/track-dosage', {\n                user_name: userName,\n                medicine_name: medicineInfo.medicine\n            });\n\n            setDoseTrackingResult(response.data);\n\n            // Optionally fetch dose history after tracking\n            await fetchDoseHistory();\n        } catch (error) {\n            console.error('Error tracking dosage', error);\n            setError(error.response?.data?.message || 'Failed to track dosage');\n        }\n    };\n\n    // Method to fetch dose history\n    const fetchDoseHistory = async () => {\n        if (!userName || !medicineInfo) return;\n\n        try {\n            const response = await axios.post('http://localhost:5000/dose-history', {\n                user_name: userName,\n                medicine_name: medicineInfo.medicine,\n                days: 7 // Optional: specify number of days\n            });\n\n            setDoseHistory(response.data.history);\n        } catch (error) {\n            console.error('Error fetching dose history', error);\n        }\n    };\n\n    // Method to get medication details\n    const fetchMedicationDetails = async () => {\n        if (!userName || !medicineInfo) return;\n\n        try {\n            const response = await axios.post('http://localhost:5000/medication-details', {\n                user_name: userName,\n                medicine_name: medicineInfo.medicine\n            });\n\n            // Handle medication details as needed\n            console.log('Medication Details:', response.data.details);\n        } catch (error) {\n            console.error('Error fetching medication details', error);\n        }\n    };\n    \n    // Function to speak error messages\n    const speakError = () => {\n        if (!window.speechSynthesis) return;\n        \n        const speech = new SpeechSynthesisUtterance();\n        speech.text = \"There was an error processing the image. Please try again with a clearer image.\";\n        speech.lang = \"en-US\";\n        window.speechSynthesis.speak(speech);\n    };\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <h2 className=\"text-2xl font-bold mb-4 text-center\">Medicine Scanner</h2>\n            <div className=\"mb-4\">\n                <label htmlFor=\"userName\" className=\"block text-sm font-medium text-gray-700\">\n                    Your Name\n                </label>\n                <input\n                    type=\"text\"\n                    id=\"userName\"\n                    value={userName}\n                    onChange={(e) => setUserName(e.target.value)}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n                    placeholder=\"Enter your name\"\n                />\n            </div>\n\n            {backendStatus === \"error\" && (\n                <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\">\n                    <p className=\"font-bold\">Backend Connection Error</p>\n                    <p>{error}</p>\n                    <button \n                        onClick={checkBackendStatus} \n                        className=\"mt-2 bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded\"\n                    >\n                        Retry Connection\n                    </button>\n                </div>\n            )}\n            \n            <div className=\"mb-4 relative\">\n                <video \n                    ref={videoRef} \n                    autoPlay \n                    playsInline \n                    className={`w-full max-w-md mx-auto border-2 rounded-lg ${cameraActive ? 'block' : 'hidden'}`}\n                    style={{ height: \"300px\", objectFit: \"cover\" }}\n                ></video>\n                \n                <canvas \n                    ref={canvasRef} \n                    className=\"hidden\"\n                ></canvas>\n                \n                {capturedImage && !cameraActive && (\n                    <div className=\"mt-4 text-center\">\n                        <h3 className=\"text-lg font-semibold mb-2\">Captured Image:</h3>\n                        <img \n                            src={capturedImage} \n                            alt=\"Captured\" \n                            className=\"mx-auto border rounded-lg shadow-md\"\n                            style={{ maxWidth: \"100%\", maxHeight: \"300px\" }}\n                        />\n                    </div>\n                )}\n                \n                {isLoading && (\n                    <div className=\"absolute inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 rounded-lg\">\n                        <div className=\"text-white\">Processing...</div>\n                    </div>\n                )}\n            </div>\n            \n            <div className=\"flex justify-center gap-4 mb-4\">\n                {!cameraActive ? (\n                    <button \n                        onClick={startCamera} \n                        className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg\"\n                        disabled={backendStatus === \"error\"}\n                    >\n                        Start Camera\n                    </button>\n                ) : (\n                    <>\n                        <button \n                            onClick={captureAndUploadImage} \n                            className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg\"\n                            disabled={isLoading}\n                        >\n                            Scan Medicine\n                        </button>\n                        <button \n                            onClick={stopCamera} \n                            className=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg\"\n                            disabled={isLoading}\n                        >\n                            Stop Camera\n                        </button>\n                    </>\n                )}\n            </div>\n            \n            {error && backendStatus !== \"error\" && (\n                <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\">\n                    <p>{error}</p>\n                </div>\n            )}\n\n            {/* Dose Tracking Section */}\n            {medicineInfo && (\n                <div className=\"mt-4 bg-white p-4 rounded-lg shadow-md\">\n                    <h3 className=\"text-xl font-bold mb-2\">Dose Tracking</h3>\n                    \n                    <button \n                        onClick={trackDosage}\n                        disabled={!userName}\n                        className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg mb-4\"\n                    >\n                        Track Dosage\n                    </button>\n\n                    {/* Dose Tracking Result */}\n                    {doseTrackingResult && (\n                        <div className={`\n                            p-3 rounded-lg mb-4\n                            ${doseTrackingResult.status === 'dosage_tracked' ? 'bg-green-100' : 'bg-yellow-100'}\n                        `}>\n                            <p className=\"font-semibold\">{doseTrackingResult.message}</p>\n                            {doseTrackingResult.doses_taken && (\n                                <p>Doses Taken: {doseTrackingResult.doses_taken} / {doseTrackingResult.total_doses}</p>\n                            )}\n                        </div>\n                    )}\n\n                    {/* Dose History */}\n                    {doseHistory && (\n                        <div>\n                            <h4 className=\"text-lg font-semibold mb-2\">Dose History (Last 7 Days)</h4>\n                            <table className=\"w-full border-collapse border border-gray-200\">\n                                <thead>\n                                    <tr className=\"bg-gray-100\">\n                                        <th className=\"border p-2\">Date</th>\n                                        <th className=\"border p-2\">Doses Taken</th>\n                                        <th className=\"border p-2\">Total Doses</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {doseHistory.map((entry, index) => (\n                                        <tr key={index}>\n                                            <td className=\"border p-2\">{entry.date}</td>\n                                            <td className=\"border p-2\">{entry.doses_taken}</td>\n                                            <td className=\"border p-2\">{entry.total_doses}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    )}\n                </div>\n            )}\n            \n        </div>\n    );\n};\n\nexport default CameraScanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}