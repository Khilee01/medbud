{"ast":null,"code":"var _jsxFileName = \"S:\\\\New folder\\\\medbuddy\\\\src\\\\components\\\\CameraScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CameraScanner = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [medicineInfo, setMedicineInfo] = useState(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [cameraActive, setCameraActive] = useState(false);\n  const [backendStatus, setBackendStatus] = useState(null);\n\n  // Check backend status when component mounts\n  useEffect(() => {\n    checkBackendStatus();\n    return () => {\n      // Cleanup: stop tracks when component unmounts\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // Function to check if backend is running\n  const checkBackendStatus = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/health\", {\n        method: \"GET\"\n      });\n      if (response.ok) {\n        setBackendStatus(\"connected\");\n        setError(null);\n      } else {\n        setBackendStatus(\"error\");\n        setError(\"Backend service is not responding correctly\");\n      }\n    } catch (error) {\n      console.error(\"Backend connection error:\", error);\n      setBackendStatus(\"error\");\n      setError(\"Cannot connect to backend service. Please make sure the Python server is running.\");\n    }\n  };\n\n  // Function to start the camera\n  const startCamera = async () => {\n    try {\n      // Check backend status first\n      if (backendStatus !== \"connected\") {\n        await checkBackendStatus();\n        if (backendStatus !== \"connected\") {\n          return; // Don't start camera if backend isn't available\n        }\n      }\n\n      // Stop any existing tracks\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: \"environment\"\n        } // Use back camera if available\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        setCameraActive(true);\n        setError(null);\n      }\n    } catch (error) {\n      console.error(\"Error accessing camera:\", error);\n      setError(\"Failed to access camera. Please check permissions.\");\n      setCameraActive(false);\n    }\n  };\n\n  // Function to stop the camera\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      const tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n      setCameraActive(false);\n    }\n  };\n\n  // Function to capture and process the image\n  const captureAndUploadImage = async () => {\n    setIsLoading(true);\n    setError(null);\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    if (canvas && video) {\n      try {\n        // Set canvas dimensions to match the video\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const context = canvas.getContext(\"2d\");\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        // Get the image data URL and set it to state\n        const imageDataUrl = canvas.toDataURL(\"image/jpeg\");\n        setCapturedImage(imageDataUrl);\n\n        // Extract the base64 data\n        const base64Data = imageDataUrl.split(',')[1];\n\n        // Send to the API using the base64 data directly\n        const response = await fetch(\"http://localhost:5000/upload\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            image_data: imageDataUrl\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setMedicineInfo(data);\n          speakMedicineInfo(data.medicine, data.description);\n        } else {\n          throw new Error(data.message || data.error || \"Failed to process the image\");\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error capturing/processing image:\", error);\n        setError(error.message || \"Failed to process the image\");\n        setIsLoading(false);\n        speakError();\n      }\n    }\n  };\n\n  // Function to convert medicine name and info to speech\n  const speakMedicineInfo = (name, description) => {\n    if (!window.speechSynthesis) return;\n    const speech = new SpeechSynthesisUtterance();\n    if (name) {\n      speech.text = `The medicine is ${name}. ${description ? \"Description: \" + description : \"No additional details available.\"}`;\n    } else {\n      speech.text = \"Unable to identify the medicine.\";\n    }\n    speech.lang = \"en-US\";\n    speech.rate = 1;\n    window.speechSynthesis.speak(speech);\n  };\n\n  // Function to speak error messages\n  const speakError = () => {\n    if (!window.speechSynthesis) return;\n    const speech = new SpeechSynthesisUtterance();\n    speech.text = \"There was an error processing the image. Please try again with a clearer image.\";\n    speech.lang = \"en-US\";\n    window.speechSynthesis.speak(speech);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-center\",\n      children: \"Medicine Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), backendStatus === \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold\",\n        children: \"Backend Connection Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkBackendStatus,\n        className: \"mt-2 bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded\",\n        children: \"Retry Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        playsInline: true,\n        className: `w-full max-w-md mx-auto border-2 rounded-lg ${cameraActive ? 'block' : 'hidden'}`,\n        style: {\n          height: \"300px\",\n          objectFit: \"cover\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), capturedImage && !cameraActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Captured Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: capturedImage,\n          alt: \"Captured\",\n          className: \"mx-auto border rounded-lg shadow-md\",\n          style: {\n            maxWidth: \"100%\",\n            maxHeight: \"300px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white\",\n          children: \"Processing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center gap-4 mb-4\",\n      children: !cameraActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCamera,\n        className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg\",\n        disabled: backendStatus === \"error\",\n        children: \"Start Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: captureAndUploadImage,\n          className: \"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg\",\n          disabled: isLoading,\n          children: \"Scan Medicine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopCamera,\n          className: \"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg\",\n          disabled: isLoading,\n          children: \"Stop Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), error && backendStatus !== \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }, this), medicineInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-2\",\n        children: medicineInfo.medicine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this), medicineInfo.description && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: \"Description/Dosage:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: medicineInfo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }, this), medicineInfo.source && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-sm text-gray-600\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Source: \", medicineInfo.source]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }, this), medicineInfo.uses && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: \"Uses:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: medicineInfo.uses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }, this), medicineInfo.side_effects && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: \"Side Effects:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: medicineInfo.side_effects\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 25\n      }, this), medicineInfo.warnings && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: \"Warnings:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: medicineInfo.warnings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n_s(CameraScanner, \"IqntjKAsE3uXOtG/AukjyLAsvxk=\");\n_c = CameraScanner;\nexport default CameraScanner;\nvar _c;\n$RefreshReg$(_c, \"CameraScanner\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraScanner","_s","videoRef","canvasRef","medicineInfo","setMedicineInfo","capturedImage","setCapturedImage","isLoading","setIsLoading","error","setError","cameraActive","setCameraActive","backendStatus","setBackendStatus","checkBackendStatus","current","srcObject","tracks","getTracks","forEach","track","stop","response","fetch","method","ok","console","startCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","stopCamera","captureAndUploadImage","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","imageDataUrl","toDataURL","base64Data","split","headers","body","JSON","stringify","image_data","data","json","speakMedicineInfo","medicine","description","Error","message","speakError","name","window","speechSynthesis","speech","SpeechSynthesisUtterance","text","lang","rate","speak","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","autoPlay","playsInline","style","objectFit","src","alt","maxWidth","maxHeight","disabled","source","uses","side_effects","warnings","_c","$RefreshReg$"],"sources":["S:/New folder/medbuddy/src/components/CameraScanner.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport axios from 'axios';\nconst CameraScanner = () => {\n    const videoRef = useRef(null);\n    const canvasRef = useRef(null);\n    const [medicineInfo, setMedicineInfo] = useState(null);\n    const [capturedImage, setCapturedImage] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [cameraActive, setCameraActive] = useState(false);\n    const [backendStatus, setBackendStatus] = useState(null);\n\n    // Check backend status when component mounts\n    useEffect(() => {\n        checkBackendStatus();\n        \n        return () => {\n            // Cleanup: stop tracks when component unmounts\n            if (videoRef.current && videoRef.current.srcObject) {\n                const tracks = videoRef.current.srcObject.getTracks();\n                tracks.forEach(track => track.stop());\n            }\n        };\n    }, []);\n\n    // Function to check if backend is running\n    const checkBackendStatus = async () => {\n        try {\n            const response = await fetch(\"http://localhost:5000/health\", {\n                method: \"GET\",\n            });\n            \n            if (response.ok) {\n                setBackendStatus(\"connected\");\n                setError(null);\n            } else {\n                setBackendStatus(\"error\");\n                setError(\"Backend service is not responding correctly\");\n            }\n        } catch (error) {\n            console.error(\"Backend connection error:\", error);\n            setBackendStatus(\"error\");\n            setError(\"Cannot connect to backend service. Please make sure the Python server is running.\");\n        }\n    };\n\n    // Function to start the camera\n    const startCamera = async () => {\n        try {\n            // Check backend status first\n            if (backendStatus !== \"connected\") {\n                await checkBackendStatus();\n                if (backendStatus !== \"connected\") {\n                    return; // Don't start camera if backend isn't available\n                }\n            }\n            \n            // Stop any existing tracks\n            if (videoRef.current && videoRef.current.srcObject) {\n                const tracks = videoRef.current.srcObject.getTracks();\n                tracks.forEach(track => track.stop());\n            }\n\n            const stream = await navigator.mediaDevices.getUserMedia({ \n                video: { facingMode: \"environment\" } // Use back camera if available\n            });\n            \n            if (videoRef.current) {\n                videoRef.current.srcObject = stream;\n                setCameraActive(true);\n                setError(null);\n            }\n        } catch (error) {\n            console.error(\"Error accessing camera:\", error);\n            setError(\"Failed to access camera. Please check permissions.\");\n            setCameraActive(false);\n        }\n    };\n\n    // Function to stop the camera\n    const stopCamera = () => {\n        if (videoRef.current && videoRef.current.srcObject) {\n            const tracks = videoRef.current.srcObject.getTracks();\n            tracks.forEach(track => track.stop());\n            videoRef.current.srcObject = null;\n            setCameraActive(false);\n        }\n    };\n\n    // Function to capture and process the image\n    const captureAndUploadImage = async () => {\n        setIsLoading(true);\n        setError(null);\n        \n        const canvas = canvasRef.current;\n        const video = videoRef.current;\n\n        if (canvas && video) {\n            try {\n                // Set canvas dimensions to match the video\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                \n                const context = canvas.getContext(\"2d\");\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n                // Get the image data URL and set it to state\n                const imageDataUrl = canvas.toDataURL(\"image/jpeg\");\n                setCapturedImage(imageDataUrl);\n\n                // Extract the base64 data\n                const base64Data = imageDataUrl.split(',')[1];\n\n                // Send to the API using the base64 data directly\n                const response = await fetch(\"http://localhost:5000/upload\", {\n                    method: \"POST\",\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        image_data: imageDataUrl\n                    }),\n                });\n\n                const data = await response.json();\n                \n                if (response.ok) {\n                    setMedicineInfo(data);\n                    speakMedicineInfo(data.medicine, data.description);\n                } else {\n                    throw new Error(data.message || data.error || \"Failed to process the image\");\n                }\n                \n                setIsLoading(false);\n            } catch (error) {\n                console.error(\"Error capturing/processing image:\", error);\n                setError(error.message || \"Failed to process the image\");\n                setIsLoading(false);\n                speakError();\n            }\n        }\n    };\n\n    // Function to convert medicine name and info to speech\n    const speakMedicineInfo = (name, description) => {\n        if (!window.speechSynthesis) return;\n        \n        const speech = new SpeechSynthesisUtterance();\n        if (name) {\n            speech.text = `The medicine is ${name}. ${description ? \"Description: \" + description : \"No additional details available.\"}`;\n        } else {\n            speech.text = \"Unable to identify the medicine.\";\n        }\n        speech.lang = \"en-US\";\n        speech.rate = 1;\n        window.speechSynthesis.speak(speech);\n    };\n\n    // Function to speak error messages\n    const speakError = () => {\n        if (!window.speechSynthesis) return;\n        \n        const speech = new SpeechSynthesisUtterance();\n        speech.text = \"There was an error processing the image. Please try again with a clearer image.\";\n        speech.lang = \"en-US\";\n        window.speechSynthesis.speak(speech);\n    };\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <h2 className=\"text-2xl font-bold mb-4 text-center\">Medicine Scanner</h2>\n            \n            {backendStatus === \"error\" && (\n                <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\">\n                    <p className=\"font-bold\">Backend Connection Error</p>\n                    <p>{error}</p>\n                    <button \n                        onClick={checkBackendStatus} \n                        className=\"mt-2 bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded\"\n                    >\n                        Retry Connection\n                    </button>\n                </div>\n            )}\n            \n            <div className=\"mb-4 relative\">\n                <video \n                    ref={videoRef} \n                    autoPlay \n                    playsInline \n                    className={`w-full max-w-md mx-auto border-2 rounded-lg ${cameraActive ? 'block' : 'hidden'}`}\n                    style={{ height: \"300px\", objectFit: \"cover\" }}\n                ></video>\n                \n                <canvas \n                    ref={canvasRef} \n                    className=\"hidden\"\n                ></canvas>\n                \n                {capturedImage && !cameraActive && (\n                    <div className=\"mt-4 text-center\">\n                        <h3 className=\"text-lg font-semibold mb-2\">Captured Image:</h3>\n                        <img \n                            src={capturedImage} \n                            alt=\"Captured\" \n                            className=\"mx-auto border rounded-lg shadow-md\"\n                            style={{ maxWidth: \"100%\", maxHeight: \"300px\" }}\n                        />\n                    </div>\n                )}\n                \n                {isLoading && (\n                    <div className=\"absolute inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 rounded-lg\">\n                        <div className=\"text-white\">Processing...</div>\n                    </div>\n                )}\n            </div>\n            \n            <div className=\"flex justify-center gap-4 mb-4\">\n                {!cameraActive ? (\n                    <button \n                        onClick={startCamera} \n                        className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg\"\n                        disabled={backendStatus === \"error\"}\n                    >\n                        Start Camera\n                    </button>\n                ) : (\n                    <>\n                        <button \n                            onClick={captureAndUploadImage} \n                            className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg\"\n                            disabled={isLoading}\n                        >\n                            Scan Medicine\n                        </button>\n                        <button \n                            onClick={stopCamera} \n                            className=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg\"\n                            disabled={isLoading}\n                        >\n                            Stop Camera\n                        </button>\n                    </>\n                )}\n            </div>\n            \n            {error && backendStatus !== \"error\" && (\n                <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\">\n                    <p>{error}</p>\n                </div>\n            )}\n            \n            {medicineInfo && (\n                <div className=\"bg-white p-4 rounded-lg shadow-md\">\n                    <h3 className=\"text-xl font-bold mb-2\">{medicineInfo.medicine}</h3>\n                    \n                    {medicineInfo.description && (\n                        <div className=\"mb-2\">\n                            <p className=\"font-semibold\">Description/Dosage:</p>\n                            <p>{medicineInfo.description}</p>\n                        </div>\n                    )}\n                    \n                    {medicineInfo.source && (\n                        <div className=\"mt-4 text-sm text-gray-600\">\n                            <p>Source: {medicineInfo.source}</p>\n                        </div>\n                    )}\n                    \n                    {medicineInfo.uses && (\n                        <div className=\"mb-2\">\n                            <p className=\"font-semibold\">Uses:</p>\n                            <p>{medicineInfo.uses}</p>\n                        </div>\n                    )}\n                    \n                    {medicineInfo.side_effects && (\n                        <div className=\"mb-2\">\n                            <p className=\"font-semibold\">Side Effects:</p>\n                            <p>{medicineInfo.side_effects}</p>\n                        </div>\n                    )}\n                    \n                    {medicineInfo.warnings && (\n                        <div>\n                            <p className=\"font-semibold\">Warnings:</p>\n                            <p>{medicineInfo.warnings}</p>\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default CameraScanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}