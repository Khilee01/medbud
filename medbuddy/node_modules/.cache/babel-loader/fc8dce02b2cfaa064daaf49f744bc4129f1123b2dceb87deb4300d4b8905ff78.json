{"ast":null,"code":"var _jsxFileName = \"S:\\\\New folder\\\\medbuddy\\\\src\\\\components\\\\CameraScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraScanner = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [medicineInfo, setMedicineInfo] = useState(\"\");\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (error) {\n      console.error(\"Error accessing camera:\", error);\n    }\n  };\n  const captureAndUploadImage = async () => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    if (canvas && video) {\n      const context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      canvas.toBlob(async blob => {\n        const formData = new FormData();\n        formData.append(\"image\", blob, \"medicine.jpg\");\n        try {\n          const response = await fetch(\"http://localhost:5000/upload\", {\n            method: \"POST\",\n            body: formData\n          });\n          const data = await response.json();\n          setMedicineInfo(data.medicine); // ✅ Now this is correctly defined\n        } catch (error) {\n          console.error(\"Error uploading image:\", error);\n        }\n      }, \"image/jpeg\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Medicine Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true,\n      width: \"300\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"300\",\n      height: \"200\",\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCamera,\n      children: \"Start Camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: captureAndUploadImage,\n      children: \"Scan Medicine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), medicineInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Detected Medicine: \", medicineInfo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(CameraScanner, \"pE/K768wB0KKC5+C0iC4RlrcGsI=\");\n_c = CameraScanner;\nexport default CameraScanner;\nvar _c;\n$RefreshReg$(_c, \"CameraScanner\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","CameraScanner","_s","videoRef","canvasRef","medicineInfo","setMedicineInfo","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","captureAndUploadImage","canvas","context","getContext","drawImage","width","height","toBlob","blob","formData","FormData","append","response","fetch","method","body","data","json","medicine","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","style","display","onClick","_c","$RefreshReg$"],"sources":["S:/New folder/medbuddy/src/components/CameraScanner.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\nconst CameraScanner = () => {\n    const videoRef = useRef(null);\n    const canvasRef = useRef(null);\n    const [medicineInfo, setMedicineInfo] = useState(\"\");\n\n    const startCamera = async () => {\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n            if (videoRef.current) {\n                videoRef.current.srcObject = stream;\n            }\n        } catch (error) {\n            console.error(\"Error accessing camera:\", error);\n        }\n    };\n\n    const captureAndUploadImage = async () => {\n        const canvas = canvasRef.current;\n        const video = videoRef.current;\n\n        if (canvas && video) {\n            const context = canvas.getContext(\"2d\");\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n            canvas.toBlob(async (blob) => {\n                const formData = new FormData();\n                formData.append(\"image\", blob, \"medicine.jpg\");\n\n                try {\n                    const response = await fetch(\"http://localhost:5000/upload\", {\n                        method: \"POST\",\n                        body: formData,\n                    });\n\n                    const data = await response.json();\n                    setMedicineInfo(data.medicine); // ✅ Now this is correctly defined\n                } catch (error) {\n                    console.error(\"Error uploading image:\", error);\n                }\n            }, \"image/jpeg\");\n        }\n    };\n\n    return (\n        <div>\n            <h2>Medicine Scanner</h2>\n            <video ref={videoRef} autoPlay playsInline width=\"300\" height=\"200\"></video>\n            <canvas ref={canvasRef} width=\"300\" height=\"200\" style={{ display: \"none\" }}></canvas>\n            <button onClick={startCamera}>Start Camera</button>\n            <button onClick={captureAndUploadImage}>Scan Medicine</button>\n            {medicineInfo && <p>Detected Medicine: {medicineInfo}</p>}\n        </div>\n    );\n};\n\nexport default CameraScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}