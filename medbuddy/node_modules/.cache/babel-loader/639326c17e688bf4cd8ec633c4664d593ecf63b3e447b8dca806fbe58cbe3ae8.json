{"ast":null,"code":"var _jsxFileName = \"S:\\\\New folder\\\\medbuddy\\\\src\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [numMeds, setNumMeds] = useState(0);\n  const [medicines, setMedicines] = useState([]);\n  const navigate = useNavigate(); // To navigate after submission\n\n  const handleNumMedsChange = e => {\n    const count = parseInt(e.target.value, 10);\n    setNumMeds(count > 0 ? count : 0);\n    setMedicines(Array(count).fill({\n      name: \"\",\n      dosage: \"\",\n      times: [\"\", \"\", \"\"]\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert(\"Submitted successfully!\"); // Show popup\n    navigate(\"/\"); // Redirect to Home Page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Medicine Reminder Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Age:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter your age\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Doctor Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Doctor's Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Number of Medications:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        value: numMeds,\n        onChange: handleNumMedsChange,\n        placeholder: \"Enter number of medicines\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"medicine-list\",\n        children: medicines.map((med, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"medicine-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Medicine Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter medicine name\",\n            value: med.name,\n            onChange: e => {\n              const updatedMeds = [...medicines];\n              updatedMeds[index].name = e.target.value;\n              setMedicines(updatedMeds);\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Dosage:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter dosage (e.g. 500mg)\",\n            value: med.dosage,\n            onChange: e => {\n              const updatedMeds = [...medicines];\n              updatedMeds[index].dosage = e.target.value;\n              setMedicines(updatedMeds);\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Reminder Times:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), med.times.map((time, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: time,\n            onChange: e => {\n              const updatedMeds = [...medicines];\n              updatedMeds[index].times[i] = e.target.value;\n              setMedicines(updatedMeds);\n            },\n            required: true\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"RiNqRiiGMuTuOM18rfloeYCsOFs=\", false, function () {\n  return [useNavigate];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Form","_s","numMeds","setNumMeds","medicines","setMedicines","navigate","handleNumMedsChange","e","count","parseInt","target","value","Array","fill","name","dosage","times","handleSubmit","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","min","onChange","id","map","med","index","updatedMeds","time","i","_c","$RefreshReg$"],"sources":["S:/New folder/medbuddy/src/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Form.css\";\n\nconst Form = () => {\n    const [numMeds, setNumMeds] = useState(0);\n    const [medicines, setMedicines] = useState([]);\n    const navigate = useNavigate(); // To navigate after submission\n\n    const handleNumMedsChange = (e) => {\n        const count = parseInt(e.target.value, 10);\n        setNumMeds(count > 0 ? count : 0);\n        setMedicines(Array(count).fill({ name: \"\", dosage: \"\", times: [\"\", \"\", \"\"] }));\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        alert(\"Submitted successfully!\"); // Show popup\n        navigate(\"/\"); // Redirect to Home Page\n    };\n\n    return (\n        <div className=\"form-container\">\n            <h2>Medicine Reminder Form</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Name:</label>\n                <input type=\"text\" placeholder=\"Enter your name\" required />\n\n                <label>Age:</label>\n                <input type=\"number\" placeholder=\"Enter your age\" required />\n\n                <label>Doctor Name:</label>\n                <input type=\"text\" placeholder=\"Doctor's Name\" required />\n\n                <label>Number of Medications:</label>\n                <input\n                    type=\"number\"\n                    min=\"1\"\n                    value={numMeds}\n                    onChange={handleNumMedsChange}\n                    placeholder=\"Enter number of medicines\"\n                    required\n                />\n\n                <div id=\"medicine-list\">\n                    {medicines.map((med, index) => (\n                        <div className=\"medicine-section\" key={index}>\n                            <label>Medicine Name:</label>\n                            <input\n                                type=\"text\"\n                                placeholder=\"Enter medicine name\"\n                                value={med.name}\n                                onChange={(e) => {\n                                    const updatedMeds = [...medicines];\n                                    updatedMeds[index].name = e.target.value;\n                                    setMedicines(updatedMeds);\n                                }}\n                                required\n                            />\n\n                            <label>Dosage:</label>\n                            <input\n                                type=\"text\"\n                                placeholder=\"Enter dosage (e.g. 500mg)\"\n                                value={med.dosage}\n                                onChange={(e) => {\n                                    const updatedMeds = [...medicines];\n                                    updatedMeds[index].dosage = e.target.value;\n                                    setMedicines(updatedMeds);\n                                }}\n                                required\n                            />\n\n                            <label>Reminder Times:</label>\n                            {med.times.map((time, i) => (\n                                <input\n                                    key={i}\n                                    type=\"time\"\n                                    value={time}\n                                    onChange={(e) => {\n                                        const updatedMeds = [...medicines];\n                                        updatedMeds[index].times[i] = e.target.value;\n                                        setMedicines(updatedMeds);\n                                    }}\n                                    required\n                                />\n                            ))}\n                        </div>\n                    ))}\n                </div>\n\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Form;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}