{"ast":null,"code":"var _jsxFileName = \"S:\\\\New folder\\\\medbuddy\\\\src\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios'; // Make sure to install axios: npm install axios\nimport React, { useState } from \"react\";\nimport \"./Form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [numMeds, setNumMeds] = useState(0);\n  const [medicines, setMedicines] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleNumMedsChange = e => {\n    const count = parseInt(e.target.value, 10) || 0;\n    setMedicines(prevMeds => {\n      const newMeds = [...prevMeds];\n      while (newMeds.length < count) {\n        newMeds.push({\n          name: \"\",\n          doses: 1,\n          times: [\"\"]\n        });\n      }\n      return newMeds.slice(0, count);\n    });\n    setNumMeds(count);\n  };\n  const handleMedicineChange = (index, field, value) => {\n    setMedicines(prevMeds => {\n      const updatedMeds = [...prevMeds];\n      updatedMeds[index][field] = value;\n      if (field === \"doses\") {\n        const doseCount = parseInt(value, 10) || 1;\n        const currentTimes = updatedMeds[index].times.slice(0, doseCount);\n        updatedMeds[index].times = [...currentTimes, ...Array(Math.max(0, doseCount - currentTimes.length)).fill(\"\")];\n      }\n      return updatedMeds;\n    });\n  };\n  const handleTimeChange = (medIndex, timeIndex, value) => {\n    setMedicines(prevMeds => {\n      const updatedMeds = [...prevMeds];\n      updatedMeds[medIndex].times[timeIndex] = value;\n      return updatedMeds;\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSuccessMessage(\"\");\n    setErrorMessage(\"\");\n\n    // Check for missing required fields\n    let missingFields = [];\n    const name = document.getElementById(\"name\").value.trim();\n    const age = document.getElementById(\"age\").value.trim();\n    const doctor = document.getElementById(\"doctor\").value.trim();\n    const numMedsInput = document.getElementById(\"numMeds\").value.trim();\n    if (!name) missingFields.push(\"Name\");\n    if (!age) missingFields.push(\"Age\");\n    if (!doctor) missingFields.push(\"Doctor Name\");\n    if (!numMedsInput || numMeds === 0) missingFields.push(\"Number of Medicines\");\n    medicines.forEach((med, index) => {\n      if (!med.name) missingFields.push(`Medicine ${index + 1} Name`);\n      if (!med.doses || med.doses < 1) missingFields.push(`Doses for Medicine ${index + 1}`);\n      med.times.forEach((time, timeIndex) => {\n        if (!time) missingFields.push(`Time ${timeIndex + 1} for Medicine ${index + 1}`);\n      });\n    });\n    if (missingFields.length > 0) {\n      alert(`Please fill in the following fields:\\n\\n${missingFields.join(\"\\n\")}`);\n      return;\n    }\n\n    // Prepare form data for submission\n    const formData = {\n      name: name,\n      age: parseInt(age, 10),\n      doctor: doctor,\n      medicines: medicines\n    };\n    try {\n      // Send data to backend\n      const response = await axios.post('http://localhost:5000/submit-form', formData);\n\n      // Handle successful submission\n      setSuccessMessage(\"ðŸŽ‰ Good job! Form has been saved successfully!\");\n\n      // Optional: Reset form or perform additional actions\n      document.getElementById(\"name\").value = \"\";\n      document.getElementById(\"age\").value = \"\";\n      document.getElementById(\"doctor\").value = \"\";\n      document.getElementById(\"numMeds\").value = \"0\";\n      setNumMeds(0);\n      setMedicines([]);\n    } catch (error) {\n      // Handle submission error\n      console.error('Submission error:', error);\n      setErrorMessage(\"Error submitting form. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Medicine Reminder Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 36\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"0Up16QPHG0f9wXW7arFQbtw38To=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["axios","React","useState","jsxDEV","_jsxDEV","Form","_s","numMeds","setNumMeds","medicines","setMedicines","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleNumMedsChange","e","count","parseInt","target","value","prevMeds","newMeds","length","push","name","doses","times","slice","handleMedicineChange","index","field","updatedMeds","doseCount","currentTimes","Array","Math","max","fill","handleTimeChange","medIndex","timeIndex","handleSubmit","preventDefault","missingFields","document","getElementById","trim","age","doctor","numMedsInput","forEach","med","time","alert","join","formData","response","post","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["S:/New folder/medbuddy/src/components/Form.js"],"sourcesContent":["import axios from 'axios'; // Make sure to install axios: npm install axios\nimport React, { useState } from \"react\";\nimport \"./Form.css\";\n\nconst Form = () => {\n    const [numMeds, setNumMeds] = useState(0);\n    const [medicines, setMedicines] = useState([]);\n    const [successMessage, setSuccessMessage] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const handleNumMedsChange = (e) => {\n        const count = parseInt(e.target.value, 10) || 0;\n        setMedicines((prevMeds) => {\n            const newMeds = [...prevMeds];\n\n            while (newMeds.length < count) {\n                newMeds.push({ name: \"\", doses: 1, times: [\"\"] });\n            }\n\n            return newMeds.slice(0, count);\n        });\n\n        setNumMeds(count);\n    };\n\n    const handleMedicineChange = (index, field, value) => {\n        setMedicines((prevMeds) => {\n            const updatedMeds = [...prevMeds];\n            updatedMeds[index][field] = value;\n\n            if (field === \"doses\") {\n                const doseCount = parseInt(value, 10) || 1;\n                const currentTimes = updatedMeds[index].times.slice(0, doseCount);\n                updatedMeds[index].times = [...currentTimes, ...Array(Math.max(0, doseCount - currentTimes.length)).fill(\"\")];\n            }\n\n            return updatedMeds;\n        });\n    };\n\n    const handleTimeChange = (medIndex, timeIndex, value) => {\n        setMedicines((prevMeds) => {\n            const updatedMeds = [...prevMeds];\n            updatedMeds[medIndex].times[timeIndex] = value;\n            return updatedMeds;\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setSuccessMessage(\"\");\n        setErrorMessage(\"\");\n\n        // Check for missing required fields\n        let missingFields = [];\n\n        const name = document.getElementById(\"name\").value.trim();\n        const age = document.getElementById(\"age\").value.trim();\n        const doctor = document.getElementById(\"doctor\").value.trim();\n        const numMedsInput = document.getElementById(\"numMeds\").value.trim();\n\n        if (!name) missingFields.push(\"Name\");\n        if (!age) missingFields.push(\"Age\");\n        if (!doctor) missingFields.push(\"Doctor Name\");\n        if (!numMedsInput || numMeds === 0) missingFields.push(\"Number of Medicines\");\n\n        medicines.forEach((med, index) => {\n            if (!med.name) missingFields.push(`Medicine ${index + 1} Name`);\n            if (!med.doses || med.doses < 1) missingFields.push(`Doses for Medicine ${index + 1}`);\n\n            med.times.forEach((time, timeIndex) => {\n                if (!time) missingFields.push(`Time ${timeIndex + 1} for Medicine ${index + 1}`);\n            });\n        });\n\n        if (missingFields.length > 0) {\n            alert(`Please fill in the following fields:\\n\\n${missingFields.join(\"\\n\")}`);\n            return;\n        }\n\n        // Prepare form data for submission\n        const formData = {\n            name: name,\n            age: parseInt(age, 10),\n            doctor: doctor,\n            medicines: medicines\n        };\n\n        try {\n            // Send data to backend\n            const response = await axios.post('http://localhost:5000/submit-form', formData);\n            \n            // Handle successful submission\n            setSuccessMessage(\"ðŸŽ‰ Good job! Form has been saved successfully!\");\n            \n            // Optional: Reset form or perform additional actions\n            document.getElementById(\"name\").value = \"\";\n            document.getElementById(\"age\").value = \"\";\n            document.getElementById(\"doctor\").value = \"\";\n            document.getElementById(\"numMeds\").value = \"0\";\n            setNumMeds(0);\n            setMedicines([]);\n\n        } catch (error) {\n            // Handle submission error\n            console.error('Submission error:', error);\n            setErrorMessage(\"Error submitting form. Please try again.\");\n        }\n    };\n\n    return (\n        <div className=\"outer-container\">\n            <div className=\"form-container\">\n                <h2>Medicine Reminder Form</h2>\n                <form onSubmit={handleSubmit}>\n                    {/* Form remains the same as before */}\n                    {/* ... (previous form code remains unchanged) ... */}\n                </form>\n\n                {successMessage && <div className=\"success-message\">{successMessage}</div>}\n                {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n            </div>\n        </div>\n    );\n};\n\nexport default Form;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}