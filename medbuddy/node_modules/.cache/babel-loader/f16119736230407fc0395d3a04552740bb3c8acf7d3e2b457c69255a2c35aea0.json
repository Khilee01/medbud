{"ast":null,"code":"var _jsxFileName = \"S:\\\\New folder\\\\medbuddy\\\\src\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [numMeds, setNumMeds] = useState(0);\n  const [medicines, setMedicines] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const handleNumMedsChange = e => {\n    const count = parseInt(e.target.value, 10) || 0;\n    setMedicines(prevMeds => {\n      const newMeds = [...prevMeds];\n      while (newMeds.length < count) {\n        newMeds.push({\n          name: \"\",\n          doses: 1,\n          times: [\"\"]\n        });\n      }\n      return newMeds.slice(0, count);\n    });\n    setNumMeds(count);\n  };\n  const handleMedicineChange = (index, field, value) => {\n    setMedicines(prevMeds => {\n      const updatedMeds = [...prevMeds];\n      updatedMeds[index][field] = value;\n      if (field === \"doses\") {\n        const doseCount = parseInt(value, 10) || 1;\n        const currentTimes = updatedMeds[index].times.slice(0, doseCount);\n        updatedMeds[index].times = [...currentTimes, ...Array(Math.max(0, doseCount - currentTimes.length)).fill(\"\")];\n      }\n      return updatedMeds;\n    });\n  };\n  const handleTimeChange = (medIndex, timeIndex, value) => {\n    setMedicines(prevMeds => {\n      const updatedMeds = [...prevMeds];\n      updatedMeds[medIndex].times[timeIndex] = value;\n      return updatedMeds;\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSuccessMessage(\"\");\n\n    // Check for missing required fields\n    let missingFields = [];\n    const name = document.getElementById(\"name\").value.trim();\n    const age = document.getElementById(\"age\").value.trim();\n    const doctor = document.getElementById(\"doctor\").value.trim();\n    const numMedsInput = document.getElementById(\"numMeds\").value.trim();\n    if (!name) missingFields.push(\"Name\");\n    if (!age) missingFields.push(\"Age\");\n    if (!doctor) missingFields.push(\"Doctor Name\");\n    if (!numMedsInput || numMeds === 0) missingFields.push(\"Number of Medicines\");\n    medicines.forEach((med, index) => {\n      if (!med.name) missingFields.push(`Medicine ${index + 1} Name`);\n      if (!med.doses || med.doses < 1) missingFields.push(`Doses for Medicine ${index + 1}`);\n      med.times.forEach((time, timeIndex) => {\n        if (!time) missingFields.push(`Time ${timeIndex + 1} for Medicine ${index + 1}`);\n      });\n    });\n    if (missingFields.length > 0) {\n      alert(`Please fill in the following fields:\\n\\n${missingFields.join(\"\\n\")}`);\n      return;\n    }\n    console.log(medicines);\n    setSuccessMessage(\"ðŸŽ‰ Good job! Form has been saved successfully!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Medicine Reminder Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"required\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          required: true,\n          placeholder: \"Enter your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          className: \"required\",\n          children: \"Age:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"age\",\n          name: \"age\",\n          required: true,\n          placeholder: \"Enter your age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"doctor\",\n          className: \"required\",\n          children: \"Doctor Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"doctor\",\n          name: \"doctor\",\n          required: true,\n          placeholder: \"Doctor's Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numMeds\",\n          className: \"required\",\n          children: \"Number of Medicines:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"numMeds\",\n          name: \"numMeds\",\n          min: \"1\",\n          value: numMeds,\n          onChange: handleNumMedsChange,\n          required: true,\n          placeholder: \"Enter number of medicines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"medsContainer\",\n          className: \"meds-container\",\n          children: medicines.map((med, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"medicine-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"required\",\n              children: [\"Medicine \", index + 1, \" Name:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: med.name,\n              onChange: e => handleMedicineChange(index, \"name\", e.target.value),\n              required: true,\n              placeholder: \"Enter medicine name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"required\",\n              children: \"Number of Doses per Day:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: med.doses,\n              onChange: e => handleMedicineChange(index, \"doses\", e.target.value),\n              required: true,\n              min: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this), med.times.map((time, timeIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required\",\n                children: [\"Reminder Time \", timeIndex + 1, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: time,\n                onChange: e => handleTimeChange(index, timeIndex, e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 41\n              }, this)]\n            }, timeIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 37\n            }, this))]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"BDn8scDrgk8/T6htuG9NnSyQeEg=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","_s","numMeds","setNumMeds","medicines","setMedicines","successMessage","setSuccessMessage","handleNumMedsChange","e","count","parseInt","target","value","prevMeds","newMeds","length","push","name","doses","times","slice","handleMedicineChange","index","field","updatedMeds","doseCount","currentTimes","Array","Math","max","fill","handleTimeChange","medIndex","timeIndex","handleSubmit","preventDefault","missingFields","document","getElementById","trim","age","doctor","numMedsInput","forEach","med","time","alert","join","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","required","placeholder","min","onChange","map","_c","$RefreshReg$"],"sources":["S:/New folder/medbuddy/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Form.css\";\n\nconst Form = () => {\n    const [numMeds, setNumMeds] = useState(0);\n    const [medicines, setMedicines] = useState([]);\n    const [successMessage, setSuccessMessage] = useState(\"\");\n\n    const handleNumMedsChange = (e) => {\n        const count = parseInt(e.target.value, 10) || 0;\n        setMedicines((prevMeds) => {\n            const newMeds = [...prevMeds];\n\n            while (newMeds.length < count) {\n                newMeds.push({ name: \"\", doses: 1, times: [\"\"] });\n            }\n\n            return newMeds.slice(0, count);\n        });\n\n        setNumMeds(count);\n    };\n\n    const handleMedicineChange = (index, field, value) => {\n        setMedicines((prevMeds) => {\n            const updatedMeds = [...prevMeds];\n            updatedMeds[index][field] = value;\n\n            if (field === \"doses\") {\n                const doseCount = parseInt(value, 10) || 1;\n                const currentTimes = updatedMeds[index].times.slice(0, doseCount);\n                updatedMeds[index].times = [...currentTimes, ...Array(Math.max(0, doseCount - currentTimes.length)).fill(\"\")];\n            }\n\n            return updatedMeds;\n        });\n    };\n\n    const handleTimeChange = (medIndex, timeIndex, value) => {\n        setMedicines((prevMeds) => {\n            const updatedMeds = [...prevMeds];\n            updatedMeds[medIndex].times[timeIndex] = value;\n            return updatedMeds;\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setSuccessMessage(\"\");\n\n        // Check for missing required fields\n        let missingFields = [];\n\n        const name = document.getElementById(\"name\").value.trim();\n        const age = document.getElementById(\"age\").value.trim();\n        const doctor = document.getElementById(\"doctor\").value.trim();\n        const numMedsInput = document.getElementById(\"numMeds\").value.trim();\n\n        if (!name) missingFields.push(\"Name\");\n        if (!age) missingFields.push(\"Age\");\n        if (!doctor) missingFields.push(\"Doctor Name\");\n        if (!numMedsInput || numMeds === 0) missingFields.push(\"Number of Medicines\");\n\n        medicines.forEach((med, index) => {\n            if (!med.name) missingFields.push(`Medicine ${index + 1} Name`);\n            if (!med.doses || med.doses < 1) missingFields.push(`Doses for Medicine ${index + 1}`);\n\n            med.times.forEach((time, timeIndex) => {\n                if (!time) missingFields.push(`Time ${timeIndex + 1} for Medicine ${index + 1}`);\n            });\n        });\n\n        if (missingFields.length > 0) {\n            alert(`Please fill in the following fields:\\n\\n${missingFields.join(\"\\n\")}`);\n            return;\n        }\n\n        console.log(medicines);\n        setSuccessMessage(\"ðŸŽ‰ Good job! Form has been saved successfully!\");\n    };\n\n    return (\n        <div className=\"outer-container\">\n            <div className=\"form-container\">\n                <h2>Medicine Reminder Form</h2>\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"name\" className=\"required\">Name:</label>\n                    <input type=\"text\" id=\"name\" name=\"name\" required placeholder=\"Enter your name\" />\n\n                    <label htmlFor=\"age\" className=\"required\">Age:</label>\n                    <input type=\"number\" id=\"age\" name=\"age\" required placeholder=\"Enter your age\" />\n\n                    <label htmlFor=\"doctor\" className=\"required\">Doctor Name:</label>\n                    <input type=\"text\" id=\"doctor\" name=\"doctor\" required placeholder=\"Doctor's Name\" />\n\n                    <label htmlFor=\"numMeds\" className=\"required\">Number of Medicines:</label>\n                    <input\n                        type=\"number\"\n                        id=\"numMeds\"\n                        name=\"numMeds\"\n                        min=\"1\"\n                        value={numMeds}\n                        onChange={handleNumMedsChange}\n                        required\n                        placeholder=\"Enter number of medicines\"\n                    />\n\n                    <div id=\"medsContainer\" className=\"meds-container\">\n                        {medicines.map((med, index) => (\n                            <div key={index} className=\"medicine-section\">\n                                <label className=\"required\">Medicine {index + 1} Name:</label>\n                                <input type=\"text\" value={med.name} onChange={(e) => handleMedicineChange(index, \"name\", e.target.value)} required placeholder=\"Enter medicine name\" />\n\n                                <label className=\"required\">Number of Doses per Day:</label>\n                                <input type=\"number\" value={med.doses} onChange={(e) => handleMedicineChange(index, \"doses\", e.target.value)} required min=\"1\" />\n\n                                {med.times.map((time, timeIndex) => (\n                                    <div key={timeIndex}>\n                                        <label className=\"required\">Reminder Time {timeIndex + 1}:</label>\n                                        <input type=\"time\" value={time} onChange={(e) => handleTimeChange(index, timeIndex, e.target.value)} required />\n                                    </div>\n                                ))}\n                            </div>\n                        ))}\n                    </div>\n\n                    <button type=\"submit\" className=\"btn\">Submit</button>\n                </form>\n\n                {successMessage && <div className=\"success-message\">{successMessage}</div>}\n            </div>\n        </div>\n    );\n};\n\nexport default Form;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}